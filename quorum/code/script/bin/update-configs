#!/usr/bin/node

const cmd = require("child_process").execSync;
const fs = require("fs");
const account = Object.keys(require('../../../res/account.json'))
const ip = require('../../../../configure.json').quorum.nodeIp

const [NODES_PATH, LEADER_NODE_ID] = process.argv.slice(2);

/*
 * Update static-nodes.json
 */

const nodes = JSON.parse(fs.readFileSync(`${NODES_PATH}/node${LEADER_NODE_ID}/static-nodes.json`, "utf-8")).map(
  (node, nid) =>
    node.replace(/@0\.0\.0\.0:(\d{3})\d{2}/, (match, p1) => `@${ip[nid]}:${p1}${`0`.padStart(2, "0")}`),
);
fs.writeFileSync(`${NODES_PATH}/node${LEADER_NODE_ID}/static-nodes.json`, JSON.stringify(nodes, null, 2));

/*
 * Update genesis.json
 */

const genesis = JSON.parse(fs.readFileSync(`${NODES_PATH}/node${LEADER_NODE_ID}/genesis.json`, "utf-8"));
const balance = Object.values(genesis.alloc)[0].balance;

const alloc = {};

for ( i = 0 ; i < account.length ; i++ ) {
  alloc[account[i]] = { balance };
}
// genesis["gasLimit"] = "0x501EBE0"
genesis["gasLimit"] = "0x501EBE0"
genesis["petersburgBlock"] = 0
genesis["istanbulBlock"] = 0
genesis["maxCodeSizeConfig"] = [
{
	"block" : 5,
	"size" : 35
},
{
	"block" : 15,
	"size" : 24
},
{
	"block" : 20,
	"size" : 35
}
]
fs.writeFileSync(
  `${NODES_PATH}/node${LEADER_NODE_ID}/genesis.json`,
  JSON.stringify(Object.assign(genesis, { alloc }), null, 2),
);

// vi:ft=javascript
